{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","redux/actions.js","redux/reduser.js","redux/store.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ElementContactList/ElementContactList.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactSuccess","fetchContactError","addContactsRequest","addContactSuccess","addContactError","deleteContactsRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","some","contact","name","alert","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReduser","devTools","process","axios","defaults","baseURL","number","dispatch","post","then","data","catch","delete","getFilter","getLoading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","connect","isLoadingContacts","contactsSelectors","onSubmit","contactsOperations","useState","setName","setNumber","nameId","uuidv4","numberId","handleChange","event","currentTarget","value","reset","className","styles","form","preventDefault","labelName","htmlFor","type","onChange","pattern","title","required","labelNumber","button","tupe","ElementContactList","onDeleteContact","ContactList_name","onClick","contactList","map","contactList_items","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d122990f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__jHxWL\",\"contactList_items\":\"ContactList_contactList_items__3xksy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelName\":\"Filter_labelName__3Fmra\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactRequest',\n);\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactsRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactsRequest = createAction('contacts/addContactRequest');\nexport const deleteContactSuccess = createAction('contacts/addContactSuccess');\nexport const deleteContactError = createAction('contacts/addContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactsRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactsRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    // console.log(state);\n    const repeatСontact = state.some(contact => contact.name === payload.name);\n    if (repeatСontact) {\n      alert(`${payload.name} is already in contacts.`);\n      return state;\n    }\n\n    return [...state, payload];\n  },\n\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [fetchContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from 'redux-persist/es/constants';\r\n// import { persistStore } from 'redux-persist';\r\nimport contactsReduser from './reduser';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReduser,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\nimport {\n  addContactsRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactsRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ name, number }) => dispatch(fetchContactSuccess(name, number)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContacts = (name, number) => dispatch => {\n  // console.log(name, number);\n  const contact = { name, number };\n  dispatch(addContactsRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContacts = id => dispatch => {\n  dispatch(deleteContactsRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  fetchContacts,\n  addContacts,\n  deleteContacts,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\n// Мемоизация\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getLoading,\n  getFilter,\n  getVisibleContacts,\n};\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.scss';\nimport { contactsOperations, contactsSelectors } from '../../redux';\n\nfunction ContactForm({ onSubmit, isLoadingContacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = uuidv4();\n  const numberId = uuidv4();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        // setName(prevState => [...prevState, value]);\n        break;\n      case 'number':\n        setNumber(value);\n        // setNumber(prevState => [...prevState, value]);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.labelName} htmlFor={nameId}>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          id={nameId}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.labelNumber} htmlFor={numberId}>\n        Number\n        <input\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          id={numberId}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={styles.button} tupe=\"submit\">\n        Add contact\n      </button>\n      {isLoadingContacts && <h2>Loading...</h2>}\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContacts(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import styles from './Filter.module.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter, contactsSelectors } from '../../redux';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.labelName}>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(changeFilter(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styles from \"./ElementContactList.module.scss\";\r\n\r\nconst ElementContactList = ({ name, number, onDeleteContact }) => (\r\n  <>\r\n    <span className={styles.ContactList_name}>\r\n      {name}: {number}\r\n    </span>\r\n    <button onClick={onDeleteContact}>Delete</button>\r\n  </>\r\n);\r\n\r\nexport default ElementContactList;\r\n","import { connect } from 'react-redux';\nimport ElementContactList from '../ElementContactList';\nimport styles from './ContactList.module.scss';\nimport PropTypes from 'prop-types';\nimport { contactsOperations, contactsSelectors } from '../../redux';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <>\n    {/* <h1>nj jyj { contacts }</h1> */}\n    <ul className={styles.contactList}>\n      {contacts.map(({ name, number, id }) => (\n        <li className={styles.contactList_items} key={id}>\n          <ElementContactList\n            name={name}\n            number={number}\n            onDeleteContact={() => onDeleteContact(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\r\n// import useLocalStorage from '../../hooks/useLocalStorage';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './App.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      {/* <BrowserRouter> */}\r\n      <App />\r\n      {/* </BrowserRouter> */}\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1Y0hS\",\"form\":\"ContactForm_form__wHAEd\",\"labelName\":\"ContactForm_labelName__CChYw\",\"labelNumber\":\"ContactForm_labelNumber__65wS_\"};"],"sourceRoot":""}